#include <stdio.h>
#include <math.h>

int format_days(int year);
int nth_occurence(int n, int dayOfWeek, int month, int year);

int main(void)
{
  int inYear;
  scanf("%d", &inYear);
  format_days(inYear);
  return 0;
}

int format_days(int year)
{
  int z, y, j;
  int colYear = 0;
  int rowYear = year%10;
  int endYear = year+30;
  int startYear = year/10;
  int spaceYear = 0;

  for(j=0; j<=9; j++)
    {
      if(j==0)
        printf("   ");
      printf("%6d", j);
    }
  printf("\n");
  for(y=year; y<endYear; y++)
    {
      if (spaceYear==0)
          printf("%d", startYear++);
      if(y== year)
        for(spaceYear=0; spaceYear<rowYear; spaceYear++)
          printf("      ");
      printf("%6d", nth_occurence(3, 1, 2, y));
      if(++spaceYear> 9)
        {
          printf("\n");
          spaceYear = 0;
        }
    }
  printf("\n");
  return 0;
}

/* This function calculates the date of the nth dayOfWeek
  Source: https://bit.ly/2QGZPIM */
int nth_occurence(int n, int dayOfWeek, int month, int year)
{
  if (month < 3)
      -- year, month += 12;
  year = year % 400;
  int century = year / 100;
  int leaps = year / 4 - century;
  int advances = year + leaps;
  int month_offset = (13 * (month + 1)) / 5;
  int first = (month_offset + advances) % 7;
  int offset = dayOfWeek - first;
  if (offset < 0)
    offset += 7;
  return 1 + offset + (n - 1) * 7;
}
